// This code is part of the Fungus library (https://github.com/snozbot/fungus)
// It is released for free under the MIT open source license (https://github.com/snozbot/fungus/blob/master/LICENSE)

/*This script has been, partially or completely, generated by the Fungus.GenerateVariableWindow*/
using UnityEngine;


namespace Fungus
{
    /// <summary>
    /// Texture2D variable type.
    /// </summary>
    [VariableInfo("Other", "Texture2D")]
    [AddComponentMenu("")]
	[System.Serializable]
	public class Texture2DVariable : VariableBase<UnityEngine.Texture2D>
	{ }

	/// <summary>
	/// Container for a Texture2D variable reference or constant value.
	/// </summary>
	[System.Serializable]
	public struct Texture2DData
	{
		[SerializeField]
		[VariableProperty("<Value>", typeof(Texture2DVariable))]
		public Texture2DVariable texture2DRef;

		[SerializeField]
		public UnityEngine.Texture2D texture2DVal;

		public static implicit operator UnityEngine.Texture2D(Texture2DData Texture2DData)
		{
			return Texture2DData.Value;
		}

		public Texture2DData(UnityEngine.Texture2D v)
		{
			texture2DVal = v;
			texture2DRef = null;
		}

		public UnityEngine.Texture2D Value
		{
			get { return (texture2DRef == null) ? texture2DVal : texture2DRef.Value; }
			set { if (texture2DRef == null) { texture2DVal = value; } else { texture2DRef.Value = value; } }
		}

		public string GetDescription()
		{
			if (texture2DRef == null)
			{
				return texture2DVal.ToString();
			}
			else
			{
				return texture2DRef.Key;
			}
		}
	}
}